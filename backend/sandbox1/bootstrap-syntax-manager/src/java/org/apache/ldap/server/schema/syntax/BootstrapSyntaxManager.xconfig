<!-- ===================================================================

  The following private LDAPd IANA numbers are reserved for backends:
    
    1.2.6.1.4.1.18060.1
    
  The following private LDAPd IANA number base is reserved for use by
  the SystemBackend specifically:
  
    1.2.6.1.4.1.18060.1.1
    
  The following private LDAPd IANA number base is reserved for use by
  SystemBackend Syntaxes:
  
    1.2.6.1.4.1.18060.1.1.1
    
  The following private LDAPd IANA number base is reserved for use by
  SystemBackend MatchingRules:
  
    1.2.6.1.4.1.18060.1.1.2
      
      * 1.2.6.1.4.1.18060.1.1.2.1 - tolowerDeepTrimDNMatch
      * 1.2.6.1.4.1.18060.1.1.2.2 - exactDNMatch
    
  The following private LDAPd IANA number base is reserved for use by
  SystemBackend AttributeTypes:
  
    1.2.6.1.4.1.18060.1.1.3
    
      * 1.2.6.1.4.1.18060.1.1.3.1 - _ndn
      * 1.2.6.1.4.1.18060.1.1.3.2 - _updn
      * 1.2.6.1.4.1.18060.1.1.3.3 - _existance
      * 1.2.6.1.4.1.18060.1.1.3.4 - _hierarchy

  The following private LDAPd IANA number base is reserved for use by
  SystemBackend ObjectClasses:
  
    1.2.6.1.4.1.18060.1.1.4

==================================================================== -->
  
<configuration>
  <syntax>
    <oid>1.3.6.1.4.1.1466.115.121.1.12</oid>
    <name>DN</name>
    <human-readable>true</human-readable>
    <description>
      Values in the Distinguished Name syntax are encoded to have the 
      representation defined in RFC 2253. Note that this representation
      is not reversible to an ASN.1 encoding used in X.500 for Distinguished 
      Names, as the CHOICE of any DirectoryString element in an RDN is no 
      longer known.
    </description>
  </syntax>
  
  <syntax>
    <oid>1.3.6.1.4.1.1466.115.121.1.27</oid>
    <name>INTEGER</name>
    <human-readable>true</human-readable>
    <description>
      Values in this syntax are encoded as the decimal representation of 
      their values, with each decimal digit represented by the its character
      equivalent. So the number 1321 is represented by the character string
      "1321".
    </description>
  </syntax>
  
  <syntax>
    <oid>1.3.6.1.4.1.1466.115.121.1.15</oid>
    <name>Directory String</name>
    <human-readable>true</human-readable>
    <description>
      A string in this syntax is encoded in the UTF-8 form of ISO 10646 (a superset
      of Unicode). Servers and clients MUST be prepared to receive encodings of 
      arbitrary Unicode characters, including characters not presently assigned to 
      any character set.
    </description>
  </syntax>
      
  <syntax>
    <oid>1.3.6.1.4.1.1466.115.121.1.38</oid>
    <name>OID</name>
    <human-readable>true</human-readable>
    <description>
        Values in the Object Identifier syntax are encoded according to the BNF in 
        section 4.1 for "oid". 
    </description>
  </syntax>
      
  <syntax>
    <oid>1.3.6.1.4.1.1466.115.121.1.58</oid>
    <name>Substring Assertion</name>
    <human-readable>true</human-readable>
    <description>
      The Substring Assertion syntax is used only as the syntax of assertion values 
      in the extensible match.  It is not used as the syntax of attributes, or in 
      the substring filter. 
          
      The Substring Assertion is encoded according to the following BNF: 

        substring = [initial] any [final] 
        initial = value 
        any = "*" *(value "*") 
        final = value 

      The  production is UTF-8 encoded string.  Should the backslash or asterix 
      characters be present in a production of , they are quoted as described in 
      section 4.3. 

      Servers SHOULD be capable of performing the following matching rules, 
      which are used in substring filters: caseIgnoreSubstringsMatch, 
      telephoneNumberSubstringsMatch, numericStringSubstringsMatch.
    </description>
  </syntax>
  
  <syntax>
      <oid>1.3.6.1.4.1.1466.115.121.1.34</oid>
      <name>Name And Optional UID</name>
      <human-readable>true</human-readable>
      <description>
        Name And Optional UID
        Values in this syntax are encoded according to the following BNF: 

            NameAndOptionalUID = DistinguishedName [ "#" bitstring ] 

        Although the `#` character may occur in a string representation of a 
        distinguished name, no additional special quoting is done. This syntax 
        has been added subsequent to RFC 1778. 

            Example: 

                  1.3.6.1.4.1.1466.0=#04024869,O=Test,C=GB#`0101`B
      </description>
  </syntax>
</configuration>