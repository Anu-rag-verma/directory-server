<?xml version="1.0" encoding="UTF-8"?>
<document>
  <properties>
    <author email="akarasulu@apache.org">Alex Karasulu</author>
    <title>Maven Eve Plugin</title>
  </properties>
  
  <body>
    <section name="Maven Eve Plugin">
      <p>
        Currently the primary function of the plugin is to generates Eve class
        files for OpenLDAP schemas. These class files contain hard coded schema
        objects representing those found in the OpenLDAP files.  Why bother you
        may ask?  There are a few reasons for this:
      </p>

      <ul>
        <li>
          Compiled hard coded files load into the server really fast in theory.
        </li>
        <li>
          Published schemas never really change so why do they need to be in a
          human readable form.
        </li>
        <li>
          Eventually, schema changes made through LDAP will be preserved through
          restarts.
        </li>
        <li>
          Extra code generation phase is not that hard with a plugin tool.
        </li>
        <li>
          Schema verification can occur before deploying schemas into the
          server.
        </li>
        <li>
          This was really easy for now but if people don't like it we can
          change it.
        </li>
      </ul>

      <subsection name="Properties">
        <table>
          <tr>
            <th>Property</th>
            <th>Optional?</th>
            <th>Description</th>
          </tr>
          <tr>
            <td>maven.eve.schema.target.dir</td>
            <td>Yes</td>
            <td>
              <p>Default value is
                <code>target/schema</code>.</p>
            </td>
          </tr>
          <tr>
            <td>maven.eve.schema.ownerDefault</td>
            <td>Yes</td>
            <td>
              <p>Default value is
                <code>uid=admin,ou=system</code>.</p>
            </td>
          </tr>
          <tr>
            <td>maven.eve.schema.dir</td>
            <td>Yes</td>
            <td>
              <p>Default value is
                <code>src/schema</code>.</p>
            </td>
          </tr>
          <tr>
            <td>maven.eve.schema.packageDefault</td>
            <td>Yes</td>
            <td>
              <p>Default value is
                <code>org.apache.eve.schema.bootstrap</code>.</p>
            </td>
          </tr>
        </table>
      </subsection>

      <subsection name="Goals">
        <p>
          <goals>
            <goal>
              <name>eve:generate</name>
              <description>
                Generates class files for OpenLDAP schemas.
              </description>
            </goal>
            <goal>
              <name>eve:init</name>
              <description>
                Finds the required parameters needed for the goals of the
                plugin.
              </description>
            </goal>
            <goal>
              <name>eve:prepare-filesystem</name>
              <description>
                Creates source output directories used to deposite schema
                files that are generated.
              </description>
            </goal>
            <goal>
              <name>eve:schema</name>
              <description>
                Top level schema generating function that uses other goals to
                coordinate generation.
              </description>
            </goal>
          </goals>
        </p>
      </subsection>

      <subsection names="Usage">
        <p>
           Take a look at how we integrate this into the Eve build 
           <a href="http://svn.apache.org/viewcvs.cgi/incubator/directory/eve/trunk/dib/">here</a>.
        </p>
      </subsection>
    </section>

    <section name="Functionality for the Future">
      <ul>
         <li>
           Compile triggers and install them into the server.
         </li>

         <li>
           Compile and load stored procedures.
         </li>

         <li>
           Test stored procedures and triggers.
         </li>

         <li>
           Generate JNDI Object and State factories from schemas.
         </li>
      </ul>
    </section>    
  </body>
</document>
